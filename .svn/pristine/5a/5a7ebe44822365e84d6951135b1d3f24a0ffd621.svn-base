<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

    <!-- 加载配置JDBC文件 -->
    <context:property-placeholder location="classpath:db.properties" ignore-unresolvable="true"/>

    <!-- 数据源 -->
    <bean id = "dataSource" class = "com.alibaba.druid.pool.DruidDataSource" destroy-method = "close" >
        <!-- 数据库基本信息配置 -->
        <property name = "url" value = "${mysql.url}" />
        <property name = "username" value = "${mysql.username}" />
        <property name = "password" value = "${mysql.password}" />
        <property name = "driverClassName" value = "${mysql.driverClass}" />
        <property name = "filters" value = "${mysql.filters}" />
        <!-- 最大并发连接数 -->
        <property name = "maxActive" value = "${mysql.maxActive}" />
        <!-- 初始化连接数量 -->
        <property name = "initialSize" value = "${mysql.initialSize}" />
        <!-- 配置获取连接等待超时的时间 -->
        <property name = "maxWait" value = "${mysql.maxWait}" />
        <!-- 最小空闲连接数 -->
        <property name = "minIdle" value = "${mysql.minIdle}" />
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name = "timeBetweenEvictionRunsMillis" value ="${mysql.timeBetweenEvictionRunsMillis}" />
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name = "minEvictableIdleTimeMillis" value ="${mysql.minEvictableIdleTimeMillis}" />
        <property name = "validationQuery" value = "${mysql.validationQuery}" />
        <property name = "testWhileIdle" value = "${mysql.testWhileIdle}" />
        <property name = "testOnBorrow" value = "${mysql.testOnBorrow}" />
        <property name = "testOnReturn" value = "${mysql.testOnReturn}" />
        <property name = "maxOpenPreparedStatements" value ="${mysql.maxOpenPreparedStatements}" />
        <!-- 打开 removeAbandoned 功能 -->
        <property name = "removeAbandoned" value = "${mysql.removeAbandoned}" />
        <!-- 1800 秒，也就是 30 分钟 -->
        <property name = "removeAbandonedTimeout" value ="${mysql.removeAbandonedTimeout}" />
        <!-- 关闭 abanded 连接时输出错误日志 -->
        <property name = "logAbandoned" value = "${mysql.logAbandoned}" />
    </bean>

    <!-- 配置mybatis的sqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <!-- 自动扫描mappers.xml文件 -->
        <property name="mapperLocations" value="classpath:mapper/*.xml"></property>
        <!-- mybatis配置文件 -->
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"></property>
    </bean>

    <!--<bean id="sessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">-->
        <!--<constructor-arg index="0" ref="sqlSessionFactory" />-->
    <!--</bean>-->

    <!--&lt;!&ndash; DAO接口所在包名，Spring会自动查找其下的类 &ndash;&gt;-->
    <!--<bean id="MapperScannerConfigurer"  class="org.mybatis.spring.mapper.MapperScannerConfigurer">-->
        <!--<property name="basePackage" value="cn.com.cdboost.user.dao" />-->
        <!--<property name="sqlSessionTemplateBeanName" value="sessionTemplate"/>-->
    <!--</bean>-->

    <!--通用Mapper配置-->
    <bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="cn.com.cdboost.collect.dao"/>
        <property name="properties">
            <value>
                mappers=cn.com.cdboost.collect.common.CommonMapper
            </value>
        </property>
    </bean>

    <!-- 直接继承了Mapper接口的才会被扫描 -->
    <!--<bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer">-->
        <!--<property name="basePackage" value="cn.com.cdboost.collect.dao"/>-->
        <!--<property name="markerInterface" value="tk.mybatis.mapper.common.Mapper"/>-->
    <!--</bean>-->

</beans>